/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "PolyFormerFW_menu.h"
#include "ThemeMonoBordered.h"

// Global variable declarations
const PROGMEM  ConnectorLocalInfo applicationInfo = { "PolyFormer", "fddaa423-cb5c-4024-8f67-a9742f4457f3" };
IoAbstractionRef ioexp_PCF8574 = ioFrom8574(0x38, -1);
ArduinoEEPROMAbstraction glArduinoEeprom(&EEPROM);
U8G2_SSD1306_128X64_NONAME_F_HW_I2C gfx(U8G2_R0, U8X8_PIN_NONE, U8X8_PIN_NONE, U8X8_PIN_NONE);
U8g2Drawable gfxDrawable(&gfx, &Wire);
GraphicsDeviceRenderer renderer(30, applicationInfo.name, &gfxDrawable);

// Global Menu Item declarations
const PROGMEM AnyMenuInfo minfoSettingsSaveSettings = { "SaveSettings", 20, 0xffff, 0, onSaveSettings };
ActionMenuItem menuSettingsSaveSettings(&minfoSettingsSaveSettings, NULL);
const PROGMEM AnalogMenuInfo minfoKd = { "Kd", 19, 34, 10000, onPidChange, 0, 10, "D" };
AnalogMenuItem menuKd(&minfoKd, 1140, NULL);
const PROGMEM AnalogMenuInfo minfoKi = { "Ki", 18, 32, 10000, onPidChange, 0, 10, "I" };
AnalogMenuItem menuKi(&minfoKi, 11, &menuKd);
const PROGMEM AnalogMenuInfo minfoKp = { "Kp", 17, 30, 10000, onPidChange, 0, 10, "P" };
AnalogMenuItem menuKp(&minfoKp, 222, &menuKi);
const PROGMEM AnyMenuInfo minfoSettingsTemperaturePIDTune = { "PIDTune", 16, 0xffff, 0, onPIDTune };
ActionMenuItem menuSettingsTemperaturePIDTune(&minfoSettingsTemperaturePIDTune, &menuKp);
RENDERING_CALLBACK_NAME_INVOKE(fnSettingsTemperatureRtCall, backSubItemRenderFn, "Temperature", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoSettingsTemperature = { "Temperature", 15, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSettingsTemperature(fnSettingsTemperatureRtCall, &menuSettingsTemperaturePIDTune);
SubMenuItem menuSettingsTemperature(&minfoSettingsTemperature, &menuBackSettingsTemperature, &menuSettingsSaveSettings);
const PROGMEM AnalogMenuInfo minfoSettingsPersonalisationSerialNumber = { "Serial Number", 23, 28, 999, NO_CALLBACK, 0, 1, "" };
AnalogMenuItem menuSettingsPersonalisationSerialNumber(&minfoSettingsPersonalisationSerialNumber, 0, NULL);
RENDERING_CALLBACK_NAME_INVOKE(fnSettingsPersonalisationUserNameRtCall, textItemRenderFn, "User Name", 18, onNameChanged)
TextMenuItem menuSettingsPersonalisationUserName(fnSettingsPersonalisationUserNameRtCall, "", 22, 10, &menuSettingsPersonalisationSerialNumber);
RENDERING_CALLBACK_NAME_INVOKE(fnSettingsPersonalisationRtCall, backSubItemRenderFn, "Personalisation", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoSettingsPersonalisation = { "Personalisation", 21, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSettingsPersonalisation(fnSettingsPersonalisationRtCall, &menuSettingsPersonalisationUserName);
SubMenuItem menuSettingsPersonalisation(&minfoSettingsPersonalisation, &menuBackSettingsPersonalisation, &menuSettingsTemperature);
const PROGMEM FloatMenuInfo minfoSettingsGearboxCs2rms = { "cs2rms", 37, 0xffff, 3, NO_CALLBACK };
FloatMenuItem menuSettingsGearboxCs2rms(&minfoSettingsGearboxCs2rms, 0.0, NULL);
const PROGMEM FloatMenuInfo minfoSettingsGearboxCsActual = { "cs_actual", 36, 0xffff, 3, NO_CALLBACK };
FloatMenuItem menuSettingsGearboxCsActual(&minfoSettingsGearboxCsActual, 0.0, &menuSettingsGearboxCs2rms);
const PROGMEM FloatMenuInfo minfoSettingsGearboxSGRESULT = { "SG_RESULT", 35, 0xffff, 3, NO_CALLBACK };
FloatMenuItem menuSettingsGearboxSGRESULT(&minfoSettingsGearboxSGRESULT, 0.0, &menuSettingsGearboxCsActual);
const PROGMEM AnalogMenuInfo minfoSettingsGearboxStallValue = { "StallValue", 34, 51, 255, onGearboxChange, 0, 1, "" };
AnalogMenuItem menuSettingsGearboxStallValue(&minfoSettingsGearboxStallValue, 100, &menuSettingsGearboxSGRESULT);
const PROGMEM BooleanMenuInfo minfoSettingsGearboxStealth = { "Stealth", 33, 50, 1, onGearboxChange, NAMING_TRUE_FALSE };
BooleanMenuItem menuSettingsGearboxStealth(&minfoSettingsGearboxStealth, true, &menuSettingsGearboxStallValue);
const PROGMEM AnalogMenuInfo minfoSettingsGearboxIScaleAnalog = { "IScaleAnalog", 32, 48, 1, onGearboxChange, 0, 1, "" };
AnalogMenuItem menuSettingsGearboxIScaleAnalog(&minfoSettingsGearboxIScaleAnalog, 0, &menuSettingsGearboxStealth);
const PROGMEM AnalogMenuInfo minfoSettingsGearboxSeMax = { "SeMax", 31, 46, 255, onGearboxChange, 0, 1, "" };
AnalogMenuItem menuSettingsGearboxSeMax(&minfoSettingsGearboxSeMax, 2, &menuSettingsGearboxIScaleAnalog);
const PROGMEM AnalogMenuInfo minfoSettingsGearboxSeMin = { "SeMin", 30, 44, 255, onGearboxChange, 0, 1, "" };
AnalogMenuItem menuSettingsGearboxSeMin(&minfoSettingsGearboxSeMin, 5, &menuSettingsGearboxSeMax);
const PROGMEM AnalogMenuInfo minfoSettingsGearboxBlankTime = { "BlankTime", 29, 42, 255, onGearboxChange, 1, 1, "" };
AnalogMenuItem menuSettingsGearboxBlankTime(&minfoSettingsGearboxBlankTime, 0, &menuSettingsGearboxSeMin);
const PROGMEM AnalogMenuInfo minfoSettingsGearboxToff = { "Toff", 28, 40, 255, onGearboxChange, 1, 1, "" };
AnalogMenuItem menuSettingsGearboxToff(&minfoSettingsGearboxToff, 3, &menuSettingsGearboxBlankTime);
const PROGMEM BooleanMenuInfo minfoReverse = { "Reverse", 27, 39, 1, onGearboxChange, NAMING_TRUE_FALSE };
BooleanMenuItem menuReverse(&minfoReverse, true, &menuSettingsGearboxToff);
const char enumStrSettingsGearboxMicrosteps_0[] PROGMEM = "1";
const char enumStrSettingsGearboxMicrosteps_1[] PROGMEM = "2";
const char enumStrSettingsGearboxMicrosteps_2[] PROGMEM = "4";
const char enumStrSettingsGearboxMicrosteps_3[] PROGMEM = "8";
const char enumStrSettingsGearboxMicrosteps_4[] PROGMEM = "16";
const char enumStrSettingsGearboxMicrosteps_5[] PROGMEM = "32";
const char enumStrSettingsGearboxMicrosteps_6[] PROGMEM = "64";
const char enumStrSettingsGearboxMicrosteps_7[] PROGMEM = "128";
const char enumStrSettingsGearboxMicrosteps_8[] PROGMEM = "256";
const char* const enumStrSettingsGearboxMicrosteps[] PROGMEM  = { enumStrSettingsGearboxMicrosteps_0, enumStrSettingsGearboxMicrosteps_1, enumStrSettingsGearboxMicrosteps_2, enumStrSettingsGearboxMicrosteps_3, enumStrSettingsGearboxMicrosteps_4, enumStrSettingsGearboxMicrosteps_5, enumStrSettingsGearboxMicrosteps_6, enumStrSettingsGearboxMicrosteps_7, enumStrSettingsGearboxMicrosteps_8 };
const PROGMEM EnumMenuInfo minfoSettingsGearboxMicrosteps = { "Microsteps", 26, 36, 8, onGearboxChange, enumStrSettingsGearboxMicrosteps };
EnumMenuItem menuSettingsGearboxMicrosteps(&minfoSettingsGearboxMicrosteps, 4, &menuReverse);
const PROGMEM AnalogMenuInfo minfoSettingsGearboxMotorCurrent = { "MotorCurrent", 14, 16, 1900, onMotorCurrent, 100, 1, "mA" };
AnalogMenuItem menuSettingsGearboxMotorCurrent(&minfoSettingsGearboxMotorCurrent, 600, &menuSettingsGearboxMicrosteps);
const PROGMEM AnalogMenuInfo minfoSettingsSpoolRadius = { "SpoolRadius", 12, 12, 499, onGearboxChange, 1, 1, "mm" };
AnalogMenuItem menuSettingsSpoolRadius(&minfoSettingsSpoolRadius, 49, &menuSettingsGearboxMotorCurrent);
const PROGMEM AnalogMenuInfo minfoSettingsGearboxRatio = { "GearboxRatio", 11, 10, 200, onGearboxChange, 0, 2, "to1" };
AnalogMenuItem menuSettingsGearboxRatio(&minfoSettingsGearboxRatio, 60, &menuSettingsSpoolRadius);
const PROGMEM AnalogMenuInfo minfoSettingsMotorSteps = { "MotorSteps", 10, 8, 396, onGearboxChange, 4, 1, "Step" };
AnalogMenuItem menuSettingsMotorSteps(&minfoSettingsMotorSteps, 196, &menuSettingsGearboxRatio);
RENDERING_CALLBACK_NAME_INVOKE(fnSettingsGearboxRtCall, backSubItemRenderFn, "Gearbox", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoSettingsGearbox = { "Gearbox", 9, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSettingsGearbox(fnSettingsGearboxRtCall, &menuSettingsMotorSteps);
SubMenuItem menuSettingsGearbox(&minfoSettingsGearbox, &menuBackSettingsGearbox, &menuSettingsPersonalisation);
RENDERING_CALLBACK_NAME_INVOKE(fnSettingsRtCall, backSubItemRenderFn, "Settings", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoSettings = { "Settings", 6, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSettings(fnSettingsRtCall, &menuSettingsGearbox);
SubMenuItem menuSettings(&minfoSettings, &menuBackSettings, NULL);
const PROGMEM AnalogMenuInfo minfoFan = { "Fan", 5, 6, 100, NO_CALLBACK, 0, 1, "%" };
AnalogMenuItem menuFan(&minfoFan, 100, &menuSettings);
const PROGMEM AnalogMenuInfo minfoTemperature = { "Setpoint", 3, 4, 140, onTemperatureChange, 100, 1, "C" };
AnalogMenuItem menuTemperature(&minfoTemperature, 100, &menuFan);
const PROGMEM AnalogMenuInfo minfoFeed = { "Feed", 2, 2, 149, onGearboxChange, 1, 10, "mm s" };
AnalogMenuItem menuFeed(&minfoFeed, 49, &menuTemperature);
const PROGMEM FloatMenuInfo minfoActualTemp = { "Actual Temp", 24, 0xffff, 2, NO_CALLBACK };
FloatMenuItem menuActualTemp(&minfoActualTemp, 0.0, &menuFeed);
const PROGMEM AnyMenuInfo minfoStart = { "Start", 1, 0xffff, 0, onStart };
ActionMenuItem menuStart(&minfoStart, &menuActualTemp);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).
    menuMgr.setEepromRef(&glArduinoEeprom);
    // Now add any readonly, non-remote and visible flags.
    menuActualTemp.setReadOnly(true);
    menuSettingsGearboxCsActual.setReadOnly(true);
    menuSettingsGearboxCs2rms.setReadOnly(true);
    menuSettingsGearboxSGRESULT.setReadOnly(true);
    menuSettingsPersonalisationUserName.setVisible(false);
    menuSettingsPersonalisationSerialNumber.setVisible(false);
    menuSettingsGearboxMotorCurrent.setStep(50);

    // Code generated by plugins.
    gfx.begin();
    renderer.setUpdatesPerSecond(10);
    switches.init(ioexp_PCF8574, SWITCHES_POLL_EVERYTHING, true);
    menuMgr.initForEncoder(&renderer, &menuStart, 1, 2, 0);
    renderer.setTitleMode(BaseGraphicalRenderer::TITLE_FIRST_ROW);
    renderer.setUseSliderForAnalog(false);
    installMonoBorderedTheme(renderer, MenuFontDef(nullptr, 1), MenuFontDef(u8g2_font_finderskeepers_tf, 1), true);
}

