name: "pre-release"

on:
  push:
    branches:
      - "master"
    tags-ignore:
      - "*"

jobs:
  gh_pre_release:
    name: Build & Tests pre release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Select Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

    - name: Install PlatformIO
      run: |
        pip install -U platformio
        pio upgrade --dev
        pio pkg update --global

    # - name: Set up Python
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: '3.7' 

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -U https://github.com/platformio/platformio-core/archive/v6.1.6.zip

    # - name: Run Unit Tests
    #   run: platformio test --environment native -f unit -v

    - name: "Build & test"
      run: |
        echo "done!"

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.PUBLISH_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          LICENSE.txt
          *.bin
    
    # - name: Run Integration Tests
    #   run: platformio remote test --environment uno --ignore unit
    #   env:
    #     PLATFORMIO_AUTH_TOKEN: ${{ secrets.platformioAgent }}

#   deploy-firmware:
#     name: Deploy firmware
#     needs: build-and-tests
#     runs-on: ubuntu-latest
#
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3
#
#     - name: Set up Python
#       uses: actions/setup-python@v3
#       with:
#         python-version: '3.7'
#
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -U platformio
#         pio upgrade --dev
#         pio pkg update --global
#
#     - name: Deploy firmware
#       run: platformio remote run --environment uno --target upload
#       env:
#         PLATFORMIO_AUTH_TOKEN: ${{ secrets.platformioAgent }}
